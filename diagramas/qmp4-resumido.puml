@startuml
class dominio.clima.AccuWeatherAPI {
+ List<Map<String,Object>> getWeather(String)
}
class dominio.usuario.Usuario {
+ Integer getTemperaturaCelciusActual(String)
+ void agregarSugerencia(Atuendo)
+ void pedirSugerenciaSegunClimaActual(String)
}
class dominio.clima.AccuWeather {
- List<Map<String,Object>> condicionesClimaticas
- LocalDateTime ultimaConsultaDelCLima
+ {static} AccuWeather getInstance()
+ Integer getProbabilidadDePrecipitacionesActual(String)
+ Integer getTemperaturaCelciusActual(String)
}
class dominio.usuario.GeneradorSugerencias {
+ Atuendo generarSugerenciaSegunClimaActual(String,List<Prenda>)
}
interface dominio.clima.ServicioClima {
Integer getProbabilidadDePrecipitacionesActual(String)
Integer getTemperaturaCelciusActual(String)
}
class dominio.ropa.Prenda {
+ Boolean esAdecuadaPara(Integer)
}
class dominio.ropa.Atuendo {
- List<Prenda> prendaSuperiores
- List<Prenda> prendaInferiores
- List<Prenda> calzados
- List<Prenda> accesorios
}
enum dominio.ropa.TipoPrenda {
- Integer temperaturaMaximaDeUso
+ Boolean esAdecuadaPara(Integer temperaturaActual)
}

dominio.ropa.TipoPrenda <--right dominio.ropa.Prenda: tipo

dominio.ropa.Prenda "*" <--right dominio.ropa.Atuendo
dominio.ropa.Prenda "*" <-- dominio.ropa.Atuendo
dominio.ropa.Prenda "*" <-- dominio.ropa.Atuendo
dominio.ropa.Prenda "*" <-- dominio.ropa.Atuendo

dominio.ropa.Prenda "*" <-- dominio.usuario.Usuario: guardarropas
dominio.ropa.Atuendo "*" <-- dominio.usuario.Usuario: sugerencias
dominio.usuario.GeneradorSugerencias <--right dominio.usuario.Usuario: generadorSugerencias
dominio.clima.ServicioClima <--up dominio.usuario.Usuario: servicioClima
dominio.clima.ServicioClima <--up dominio.usuario.GeneradorSugerencias: servicioClima
dominio.ropa.Atuendo <.. dominio.usuario.GeneradorSugerencias
dominio.ropa.Prenda <.. dominio.usuario.GeneradorSugerencias

dominio.clima.ServicioClima <|.. dominio.clima.AccuWeather
dominio.clima.AccuWeatherAPI <..left dominio.clima.AccuWeather

@enduml