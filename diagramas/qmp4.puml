@startuml
class dominio.clima.AccuWeatherAPI {
+ List<Map<String,Object>> getWeather(String)
}
class dominio.usuario.Usuario {
+ void agregarSugerencia(Atuendo)
}
class dominio.ropa.BorradorDePrendas {
- TipoPrenda tipoPrenda
- TipoMaterial tipoMaterial
- Trama trama
- Color colorPrincipal
- Color colorSecundario
- BigDecimal temperaturaMaximaDeUso;
+ BorradorDePrendas setTipoMaterial(TipoMaterial)
+ BorradorDePrendas setTrama(Trama)
+ BorradorDePrendas setColorPrincipal(Color)
+ BorradorDePrendas setColorSecundario(Color)
+ BorradorDePrendas settemperaturaMaximaDeUso(BigDecimal temperaturaMaximaDeUso)
+ CategoriaPrenda identificarCategoria()
+ Prenda generarPrenda()
}
class dominio.clima.AccuWeather {
- Long periodoDeActualizacion
+ EstadoDelClima obtenerCondicionesClimaticas(String ciudad)
- void validarUltimaConsulta(String ciudad)
}
class dominio.clima.EstadoDelClima {
- BigDecimal temperatura
- BigDecimal humedad
}
class dominio.clima.RepositorioClima {
- Map<String, Object> condicionesClimaticas
+ EstadoDelClima getCondicionClimatica(String ciudad)
+ void setCondicionesClimaticas(String ciudad, LocalDateTime ultimaActualizacion, List<EstadoDelClima> condicionesClimaticas)
+ Boolean climaEstaDesactualizado(String ciudad, Long periodoDeActualizacion)
}
class dominio.usuario.Guardarropa {
+ List<Atuendo> generarSugerencias()
}
class dominio.usuario.AsesorDeImagen {
+ Atuendo sugerirAtuendo(String ciudad, Guardarropa guardarropa)
}
interface dominio.clima.ServicioMeteorologico {
~ EstadoDelClima obtenerCondicionesClimaticas(String ciudad)
}
class dominio.ropa.Prenda {
- TipoPrenda tipo
- TipoMaterial tipoMaterial
- Trama trama
- Color colorPrincipal
- Color colorSecundario
- Integer temperaturaMaximaDeUso
+ Boolean esAdecuadaPara(Integer temperaturaActual)
}
class dominio.ropa.Atuendo {
+ Boolean esAdecuadoPara(BigDecimal temperaturaActual)
}

dominio.ropa.Prenda <-right- dominio.ropa.Atuendo :prendaSuperior
dominio.ropa.Prenda <-- dominio.ropa.Atuendo :prendaInferior
dominio.ropa.Prenda <-- dominio.ropa.Atuendo :calzado
dominio.ropa.Prenda <-- dominio.ropa.Atuendo :accesorio

dominio.ropa.Prenda <.up. dominio.ropa.BorradorDePrendas

dominio.ropa.Prenda "*" <-left- dominio.usuario.Guardarropa :prendasSuperiores
dominio.ropa.Prenda "*" <-- dominio.usuario.Guardarropa :prendasInferiores
dominio.ropa.Prenda "*" <-- dominio.usuario.Guardarropa :calzados
dominio.ropa.Prenda "*" <-- dominio.usuario.Guardarropa :accesorios

dominio.ropa.Atuendo "*" <-- dominio.usuario.Usuario: sugerencias
dominio.usuario.Guardarropa <-- dominio.usuario.Usuario: guardarropa
dominio.clima.ServicioMeteorologico <-down- dominio.usuario.AsesorDeImagen: servicioMeteorologico
dominio.usuario.Guardarropa <.left. dominio.usuario.AsesorDeImagen

dominio.ropa.Atuendo <.. dominio.usuario.Guardarropa

dominio.clima.AccuWeatherAPI <-down- dominio.clima.AccuWeather : apiClima
dominio.clima.ServicioMeteorologico <|.right. dominio.clima.AccuWeather

dominio.clima.RepositorioClima <-down- dominio.clima.ServicioMeteorologico : repositorioClima
dominio.clima.EstadoDelClima <.. dominio.clima.ServicioMeteorologico
@enduml